class Solution {
    private static final int[][] numberMap = {
            {0,4,3,4,3,2,3,2,1,2,1,1},
            {4,0,1,0,0,2,0,0,3,0,0,0},
            {3,1,0,1,2,1,2,3,2,3,4,0},
            {4,0,1,0,0,2,0,0,3,0,0,0},
            {3,0,2,0,0,1,0,0,2,0,0,0},
            {2,2,1,2,1,0,1,2,1,2,0,0},
            {3,0,2,0,0,1,0,0,2,0,0},
            {2,0,3,0,0,2,0,0,1,0,0,0},
            {1,3,2,3,2,1,2,1,0,1,0,0},
            {2,0,3,0,0,2,0,0,1,0,0,0},
            {1,0,4,0,0,3,0,0,2,0,0,0},
            {1,0,4,0,0,3,0,0,2,0,0,0},
    };

    public String solution(int[] numbers, String hand) {
        StringBuilder answer = new StringBuilder();

        int leftNumber = 10;
        int rightNumber = 11;

        for (int i = 0; i < numbers.length; i++) {
            if (numbers[i] == 1 || numbers[i] == 4 || numbers[i] == 7) {
                answer.append("L");
                leftNumber = numbers[i];
            } else if (numbers[i] == 3 || numbers[i] == 6 || numbers[i] == 9) {
                answer.append("R");
                rightNumber = numbers[i];
            } else {
                int leftCount = numberMap[leftNumber][numbers[i]];
                int rightCount = numberMap[rightNumber][numbers[i]];
                if (leftCount > rightCount) {
                    answer.append("R");
                    rightNumber = numbers[i];
                } else if (rightCount > leftCount) {
                    answer.append("L");
                    leftNumber = numbers[i];
                } else {
                    if (hand.equals("right")) {
                        answer.append("R");
                        rightNumber = numbers[i];
                    } else {
                        answer.append("L");
                        leftNumber = numbers[i];
                    }
                }
            }
        }

        return answer.toString();
    }
}
